---
import type { InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import ProseWrapper from "../../components/ProseWrapper.astro";

export async function getStaticPaths() {
  const postEntries = await getCollection("posts");
  return postEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description} ogImage={`/open-graph/${entry.slug}.png`}>
  <article class="mx-auto flex max-w-2xl flex-col gap-20" data-pagefind-body>
    <header class="flex flex-col gap-4">
      <h1 class="text-3xl font-bold text-zinc-900 transition-colors dark:text-white" transition:name={entry.slug}>
        {entry.data.title}
      </h1>
      <small class="text-zinc-700 transition-colors dark:text-zinc-300">
        <span>
          {entry.data.datetime.toLocaleString("en-us", { year: "numeric", month: "short", day: "numeric" })}
        </span>
        Â· {remarkPluginFrontmatter.minutesRead}
      </small>
      <div class="mt-1 flex gap-4">
        {
          entry.data.tags.map((tag) => (
            <a
              href={`/tags/${tag}`}
              class="rounded-full bg-zinc-100 px-3 py-1 text-xs text-zinc-500 transition-colors hover:text-zinc-900 dark:bg-zinc-800 dark:hover:text-zinc-100"
            >
              {tag}
            </a>
          ))
        }
      </div>
    </header>
    <ProseWrapper>
      <Content />
    </ProseWrapper>
  </article>
</BaseLayout>
