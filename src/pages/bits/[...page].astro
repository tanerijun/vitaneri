---
import { getCollection, type CollectionEntry } from "astro:content";
import type { GetStaticPaths, Page } from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import SectionWrapper from "../../components/SectionWrapper.astro";
import ProseWrapper from "../../components/ProseWrapper.astro";
import PageLink from "../../components/PageLink.astro";

export const getStaticPaths = (async ({ paginate }) => {
	const bitEntries = (await getCollection("bits")).sort((a, b) => parseInt(b.slug) - parseInt(a.slug));

	return paginate(bitEntries, { pageSize: 10 });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"bits">>;
}

let { page } = Astro.props;
---

<BaseLayout title={`Bits #${page.currentPage}`} description={`Page ${page.currentPage} of my Bits.`}>
	<div class="mx-auto flex max-w-2xl flex-col gap-20">
		<div class="mt-20 flex flex-col gap-40">
			{
				page.data.map(async (entry) => {
					const id = parseInt(entry.slug).toString();
					const { Content } = await entry.render();

					return (
						<SectionWrapper headingText={id}>
							<ProseWrapper>
								<Content />
							</ProseWrapper>
						</SectionWrapper>
					);
				})
			}
		</div>
		<div class="flex justify-between">
			{page.url.prev ? <PageLink to={page.url.prev} text="Previous" /> : <div />}
			{page.url.next ? <PageLink to={page.url.next} text="Next" /> : <div />}
		</div>
	</div>
</BaseLayout>
