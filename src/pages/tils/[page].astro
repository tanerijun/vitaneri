---
import { getCollection, type CollectionEntry } from "astro:content";
import type { GetStaticPaths, Page } from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import SectionWrapper from "../../components/SectionWrapper.astro";
import ProseWrapper from "../../components/ProseWrapper.astro";

export const getStaticPaths = (async ({ paginate }) => {
	const tilEntries = (await getCollection("tils")).sort((a, b) => parseInt(b.slug) - parseInt(a.slug));

	return paginate(tilEntries, { pageSize: 10 });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"tils">>;
}

let { page } = Astro.props;
---

<BaseLayout>
	<div class="mx-auto flex max-w-2xl flex-col gap-20">
		<div class="mt-20 flex flex-col gap-40">
			{
				page.data.map(async (entry) => {
					const id = parseInt(entry.slug).toString();
					const { Content } = await entry.render();

					return (
						<SectionWrapper headingText={id}>
							<ProseWrapper>
								<Content />
							</ProseWrapper>
						</SectionWrapper>
					);
				})
			}
		</div>
		<div class="flex justify-between">
			{
				page.url.prev ? (
					<a
						href={page.url.prev}
						class="text-zinc-600 underline decoration-zinc-300 underline-offset-4 hover:text-zinc-900 hover:decoration-zinc-700 dark:text-zinc-400 dark:decoration-zinc-700 dark:hover:text-zinc-100 dark:hover:decoration-zinc-300"
					>
						Previous
					</a>
				) : (
					<div />
				)
			}
			{
				page.url.next ? (
					<a
						href={page.url.next}
						class="text-zinc-600 underline decoration-zinc-300 underline-offset-4 hover:text-zinc-900 hover:decoration-zinc-700 dark:text-zinc-400 dark:decoration-zinc-700 dark:hover:text-zinc-100 dark:hover:decoration-zinc-300"
					>
						Next
					</a>
				) : (
					<div />
				)
			}
		</div>
	</div>
</BaseLayout>
